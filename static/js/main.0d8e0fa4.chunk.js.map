{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Fliter/Filter.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/FormAddContact/FormAddContact.module.css","components/Container/Container.js","components/Section/Section.js","components/FormAddContact/FormAddContact.js","components/ContactsList/ContactsList.js","components/Fliter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","style","container","Section","title","protoType","PropTypes","string","FormAddContact","loginInputId","shortid","generate","numberInputId","contactInputId","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","props","onSubmit","resetForm","form","this","label","htmlFor","input","type","placeholder","pattern","required","onChange","input_number","button","Component","func","ContactsList","contacts","deleteContact","list","map","item","onClick","Filter","filter","onChangeFilter","App","addContact","data","prevState","some","includes","alert","currentId","changeFilter","toLocaleLowerCase","onFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDom","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.0d8e0fa4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__35IlQ\",\"item\":\"ContactsList_item__2e1AU\",\"button\":\"ContactsList_button__3PBIs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__27Gno\",\"input\":\"Filter_input__3om28\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__k-9xm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__i7CDt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormAddContact_form__2qUJM\",\"label\":\"FormAddContact_label__1hNYy\",\"input\":\"FormAddContact_input__1M6zJ\",\"input_number\":\"FormAddContact_input_number__coGP7\",\"button\":\"FormAddContact_button__y-75k\"};","import style from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={style.container}>{children}</div>;\n}\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2 className={style.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.protoType = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport style from './FormAddContact.module.css';\n\nclass FormAddContact extends Component {\n  loginInputId = shortid.generate();\n  numberInputId = shortid.generate();\n  contactInputId = shortid.generate();\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    // console.log(event.currentTarget);\n    // console.log(event.currentTarget.name);\n    // console.log(event.currentTarget.value);\n\n    this.setState({\n      // [event.currentTarget.name]: event.currentTarget.value,\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // console.log(this.state);\n\n    const contact = {\n      id: shortid.generate(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(contact);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={style.form} onSubmit={this.handleSubmit}>\n        <label className={style.label} htmlFor={this.loginInputId}>\n          Name\n          <input\n            className={style.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            id={this.loginInputId}\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label className={style.label} htmlFor={this.numberInputId}>\n          Namber\n          <input\n            className={style.input_number}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Namber\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            id={this.numberInputId}\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={style.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nFormAddContact.protoType = {\n  onSubmit: PropTypes.func,\n};\n\nexport default FormAddContact;\n","import PropTypes from 'prop-types';\nimport style from './ContactsList.module.css';\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n  // console.log(contacts);\n\n  return (\n    <ul className={style.list}>\n      {contacts.map(contact => {\n        return (\n          <li className={style.item} key={contact.id}>\n            <span>\n              {contact.name}: {contact.number}\n            </span>\n\n            <button\n              className={style.button}\n              type=\"button\"\n              id={contact.id}\n              onClick={() => deleteContact(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport style from './Filter.module.css';\n\nconst Filter = ({ filter, onChangeFilter }) => {\n  return (\n    <label className={style.label}>\n      Find contacts by name\n      <input\n        className={style.input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChangeFilter}\n        value={filter}\n      ></input>\n    </label>\n  );\n};\n\nFilter.protoType = {\n  filter: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\nimport { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport FormAddContact from './components/FormAddContact/FormAddContact';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Fliter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  addContact = data => {\n    // console.log(data);\n    this.setState(prevState => {\n      if (\n        prevState.contacts.some(contact => contact.name.includes(data.name))\n      ) {\n        return alert(`${data.name} is already in contacts!`);\n      }\n\n      return { contacts: [...prevState.contacts, data] };\n    });\n  };\n\n  deleteContact = currentId => {\n    this.setState(prevState => {\n      return {\n        contacts: [\n          ...prevState.contacts.filter(contact => contact.id !== currentId),\n        ],\n      };\n    });\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value.toLocaleLowerCase() });\n  };\n\n  onFilter = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    // console.log(contacts);\n    // console.log(parsedContacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      // console.log('Обновились контакты');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n    // console.log(prevProps);\n    // console.log(this.state);\n  }\n\n  // handleNameChange = event => {\n  //   this.setState({ name: event.currentTarget.value });\n  // };\n\n  // handleNumberChange = event => {\n  //   this.setState({ number: event.currentTarget.value });\n  // };\n\n  render() {\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <FormAddContact onSubmit={this.addContact} />\n\n          {/* <h3>Name</h3>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleNameChange}\n          />           */}\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter\n            filter={this.state.filter}\n            onChangeFilter={this.changeFilter}\n          />\n          {this.state.filter === '' ? (\n            <ContactsList\n              contacts={this.state.contacts}\n              deleteContact={this.deleteContact}\n            />\n          ) : (\n            <ContactsList\n              contacts={this.onFilter()}\n              deleteContact={this.deleteContact}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}